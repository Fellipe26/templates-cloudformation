AWSTemplateFormatVersion: 2010-09-09
Description: Template para criacao de Cluster ECS.
Parameters:
  ClusterName:
    Type: String
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VPC
  Network:
    Type: String
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
    Description: Network for Security Group
  SubnetIds:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Informe no minimo duas subnets
  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Nome de chave existente para EC2
  InstanceType:
    Description: Tipo de instancia
    Type: String
    Default: t3.micro
  AmiId:
    Type: AWS::EC2::Image::Id
    Description: AMI para para instancias do ECS check https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    Default: ami-084f07d75acedcefa
  AutoScalingMin:
    Description: Minimum number of EC2 instances to keep in the ASG
    Type: String
    Default: '1'
  AutoScalingMax:
    Description: Maximum number of EC2 instances to keep in the ASG
    Type: String
    Default: '2'
  AutoScalingDesired:
    Description: Desired number of EC2 instances to keep in the ASG
    Type: String
    Default: '1'
  AutoScalingMemoryThreshold:
    Description: 'Threshold for the AutoScaling Policy, on the MemoryReservation metric'
    Type: String
    Default: '70'
  AutoScalingCPUThreshold:
    Description: 'Threshold for the AutoScaling Policy, on the MemoryReservation metric'
    Type: String
    Default: '70'
  Cooldown: 
    Description: 'A quantidade de tempo, em segundos, após a conclusão de uma ação de escalabilidade para que outra ação de escalabilidade possa ser iniciada'
    Type: String
    Default: 180
  HealthCheckGracePeriod:
    Description: 'O tempo em segundos que o Auto Scaling do Amazon EC2 aguardará antes de verificar o status de integridade de uma instância do EC2 que entrou em serviço'
    Type: String
    Default: 0
  Product:
    Description: 'Product tag'
    Type: String
    Default: 'SharedResource'
  Environment:
    Description: 'Environment tag'
    Type: String

Resources:
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Ref ClusterName

  EcsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub ${AWS::StackName}-sg
      GroupDescription: ECS Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.13.0.0/16
        Description: "Acesso SSH VPN"
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.12.0.0/16
        Description: "Acesso SSH VPN"
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.11.0.0/16
        Description: "Acesso SSH VPN"
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.10.0.0/16
        Description: "Acesso SSH VPN"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-sg
        - Key: Environment
          Value: !Ref Environment
        - Key: Product
          Value: !Ref Product
    
  EcsSecurityGroupInbound:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EcsSecurityGroup
      Description: 'Intervalo de portas efemeras para atribuicao automatica pelo ECS'
      IpProtocol: tcp
      FromPort: 32768
      ToPort: 61000
      CidrIp: !Ref Network

  ECSAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      Cooldown: !Ref Cooldown
      HealthCheckGracePeriod: !Ref HealthCheckGracePeriod
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: !Ref AutoScalingMin
      MaxSize: !Ref AutoScalingMax
      DesiredCapacity: !Ref AutoScalingDesired
      Tags:
        - Key: Name
          Value: !Sub ${ECSCluster}
          PropagateAtLaunch: 'true'
        - Key: Environment
          Value: !Ref Environment
          PropagateAtLaunch: 'true'
        - Key: Product
          Value: !Ref Product
          PropagateAtLaunch: 'true'
        - Key: SSM
          Value: Y
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: 'true'

  ECSAutoScalingPolicyMemory:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AutoScalingGroupName: !Ref ECSAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        TargetValue: !Ref AutoScalingMemoryThreshold
        CustomizedMetricSpecification:
          MetricName: MemoryUtilization
          Namespace: AWS/ECS
          Statistic: Average
          Dimensions:
            - Name: ClusterName
              Value:
                Ref: ECSCluster

  ECSAutoScalingPolicyCpu:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AutoScalingGroupName: !Ref ECSAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        TargetValue: !Ref AutoScalingCPUThreshold
        CustomizedMetricSpecification:
          MetricName: CPUUtilization
          Namespace: AWS/ECS
          Statistic: Average
          Dimensions:
            - Name: ClusterName
              Value:
                Ref: ECSCluster

  LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !Ref AmiId
      SecurityGroups:
        - !Ref EcsSecurityGroup
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      KeyName: !Ref KeyName
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
            echo "ECS_AVAILABLE_LOGGING_DRIVERS=[\"awslogs\",\"fluentd\"]" >> /etc/ecs/ecs.config
            rm /etc/localtime
            ln -s /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
            yum update && yum upgrade -y
            yum install -y nfs-utils aws-cfn-bootstrap wget ecs-init 
            yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource ECSAutoScalingGroup --region ${AWS::Region}

  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: EC2ContainerServiceforEC2Role
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:AttachNetworkInterface'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:CreateNetworkInterfacePermission'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DeleteNetworkInterfacePermission'
                  - 'ec2:Describe*'
                  - 'ec2:DetachNetworkInterface'
                  - 'ecs:CreateCluster'
                  - 'ecs:DeregisterContainerInstance'
                  - 'ecs:DiscoverPollEndpoint'
                  - 'ecs:Poll'
                  - 'ecs:RegisterContainerInstance'
                  - 'ecs:StartTelemetrySession'
                  - 'ecs:UpdateContainerInstancesState'
                  - 'ecs:Submit*'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ssm:*'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: EC2ContainerServiceFullAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'autoscaling:Describe*'
                  - 'autoscaling:UpdateAutoScalingGroup'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStack*'
                  - 'cloudformation:UpdateStack'
                  - 'cloudwatch:GetMetricStatistics'
                  - 'ec2:Describe*'
                  - 'elasticloadbalancing:*'
                  - 'ecs:*'
                  - 'events:DescribeRule'
                  - 'events:DeleteRule'
                  - 'events:ListRuleNamesByTarget'
                  - 'events:ListTargetsByRule'
                  - 'events:PutRule'
                  - 'events:PutTargets'
                  - 'events:RemoveTargets'
                  - 'iam:ListInstanceProfiles'
                  - 'iam:ListRoles'
                  - 'iam:PassRole'
                Resource: '*'
        - PolicyName: S3ReadOnlyAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 's3:Get*'
                  - 's3:List*'
                Resource: '*'
        - PolicyName: SecretsManagerReadOnly
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:Get*'
                  - 'secretsmanager:List*'
                  - 'secretsmanager:Describe*'
                Resource: '*'
  
  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EC2Role

Outputs:
  EcsCluster:
    Description: Cluster ECS
    Value: !Ref ECSCluster

  EcsSecurityGroupId:
    Description: EcsSecurityGroup Created
    Value: !GetAtt EcsSecurityGroup.GroupId
